version: '3.8'

services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
      target: production
    container_name: rfg-api
    restart: unless-stopped
    ports:
      - "${PORT:-3000}:3000"
    environment:
      - NODE_ENV=${NODE_ENV:-production}
      - PORT=3000
      - MONGODB_URI=mongodb://mongo:27017/random-fact-generator
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - JWT_SECRET=${JWT_SECRET}
      - GITHUB_TOKEN=${GITHUB_TOKEN}
      - GITHUB_AI_ENDPOINT=${GITHUB_AI_ENDPOINT:-https://models.github.ai/inference}
      - GITHUB_AI_MODEL=${GITHUB_AI_MODEL:-xai/grok-3}
      - AI_FACT_GENERATION_ENABLED=${AI_FACT_GENERATION_ENABLED:-true}
      - AI_FALLBACK_ENABLED=${AI_FALLBACK_ENABLED:-true}
      - AI_CONTENT_MODERATION_ENABLED=${AI_CONTENT_MODERATION_ENABLED:-true}
    depends_on:
      mongo:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - app_logs:/usr/src/app/logs
    networks:
      - rfg-network
    healthcheck:
      test: ["CMD", "node", "src/utils/healthCheck.js", "--json"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  mongo:
    image: mongo:7-jammy
    container_name: rfg-mongo
    restart: unless-stopped
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_ROOT_USER:-admin}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_ROOT_PASSWORD:-password123}
      - MONGO_INITDB_DATABASE=random-fact-generator
    volumes:
      - mongo_data:/data/db
      - mongo_config:/data/configdb
      - ./scripts/mongo-init.sh:/docker-entrypoint-initdb.d/mongo-init.sh:ro
    networks:
      - rfg-network
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 40s

  redis:
    image: redis:7-alpine
    container_name: rfg-redis
    restart: unless-stopped
    command: redis-server --appendonly yes --requirepass ${REDIS_PASSWORD:-}
    volumes:
      - redis_data:/data
    networks:
      - rfg-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Optional: MongoDB Express for database management
  mongo-express:
    image: mongo-express:latest
    container_name: rfg-mongo-express
    restart: unless-stopped
    ports:
      - "8081:8081"
    environment:
      - ME_CONFIG_MONGODB_ADMINUSERNAME=${MONGO_ROOT_USER:-admin}
      - ME_CONFIG_MONGODB_ADMINPASSWORD=${MONGO_ROOT_PASSWORD:-password123}
      - ME_CONFIG_MONGODB_URL=mongodb://admin:password123@mongo:27017/
      - ME_CONFIG_BASICAUTH_USERNAME=${MONGO_EXPRESS_USER:-admin}
      - ME_CONFIG_BASICAUTH_PASSWORD=${MONGO_EXPRESS_PASSWORD:-pass}
    depends_on:
      mongo:
        condition: service_healthy
    networks:
      - rfg-network
    profiles:
      - debug

  # Optional: Redis Commander for Redis management
  redis-commander:
    image: rediscommander/redis-commander:latest
    container_name: rfg-redis-commander
    restart: unless-stopped
    ports:
      - "8082:8081"
    environment:
      - REDIS_HOSTS=local:redis:6379
      - REDIS_PASSWORD=${REDIS_PASSWORD:-}
    depends_on:
      redis:
        condition: service_healthy
    networks:
      - rfg-network
    profiles:
      - debug

  # Optional: Nginx reverse proxy for production
  nginx:
    image: nginx:alpine
    container_name: rfg-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
      - nginx_logs:/var/log/nginx
    depends_on:
      - app
    networks:
      - rfg-network
    profiles:
      - production

volumes:
  mongo_data:
    driver: local
  mongo_config:
    driver: local
  redis_data:
    driver: local
  app_logs:
    driver: local
  nginx_logs:
    driver: local

networks:
  rfg-network:
    driver: bridge

# Development override
# To use: docker-compose -f docker-compose.yml -f docker-compose.dev.yml up
# Create docker-compose.dev.yml for development overrides